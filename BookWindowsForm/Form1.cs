using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;using BookLibrary;using System.Threading;namespace BookWindowsForm{    public partial class Form1 : Form    {        List<Book> books = new List<Book>();        String currentFileName = String.Empty;        addForm addForm = new addForm();        Boolean isSaved = false;


        public Form1()        {            InitializeComponent();            if (currentFileName.Equals(""))            {                this.SaveToolItem.Enabled = false;                this.SaveAsToolItem.Enabled = false;            }        }        private void Form1_Load(object sender, EventArgs e)        {        }        private void ClearTextBoxes()        {            addForm.result = new Book();            addForm.textBox1.Text = "";            addForm.textBox2.Text = "";            addForm.textBox3.Text = "";            addForm.textBox4.Text = "";        }        private void LoadInDataGrid()        {            BookGrid.Rows.Clear();            foreach (Book one in books)            {                BookGrid.Rows.Add(one.toArray());            }            SaveToolItem.Enabled = !String.IsNullOrEmpty(currentFileName);            SaveAsToolItem.Enabled = true;            isSaved = false;
            this.Text += '*';        }        private void AddClick(object sender, EventArgs e)        {            if (addForm.ShowDialog() == DialogResult.OK)            {                if (books.Count == 0)                {                    addForm.result.Id = 1;                    books.Add(addForm.result);                }                else                {                    addForm.result.Id = books[books.Count - 1].Id + 1;                    books.Add(addForm.result);                }                this.LoadInDataGrid();            }            ClearTextBoxes();        }        private void SaveToFile(SaveFileDialog dialog)        {            StatusStrip.Items.Clear();            currentFileName = SaveFileDialog.FileName;            isSaved = true;            SaveToolItem.Enabled = false;            StatusStrip.Items.Add($"Books have been saved to {currentFileName.Split('\\')[currentFileName.Split('\\').Length - 1]}");            BookService.Save(books, currentFileName);            this.Text = currentFileName.Split('\\')[currentFileName.Split('\\').Length - 1];        }        private void Save()        {            StatusStrip.Items.Clear();            BookService.Save(books, currentFileName);            StatusStrip.Items.Add($"Books have been saved to {currentFileName.Split('\\')[currentFileName.Split('\\').Length - 1]}");            isSaved = true;            this.Text = this.Text.Split('*')[0];            SaveToolItem.Enabled = false;        }        private void OpenFromFile()        {            BookGrid.Rows.Clear();            StatusStrip.Items.Clear();            currentFileName = OpenFileDialog.FileName;            books = BookService.FindAll(currentFileName);            foreach (Book one in books)            {                BookGrid.Rows.Add(one.toArray());            }            SaveToolItem.Enabled = false;            SaveAsToolItem.Enabled = true;            isSaved = true;            StatusStrip.Items.Add($"Books have been loaded from file {currentFileName.Split('\\')[currentFileName.Split('\\').Length - 1]}");
            this.Text = currentFileName.Split('\\')[currentFileName.Split('\\').Length - 1];        }        private void OpenFileCLick(object sender, EventArgs e)        {            if (!isSaved && books.Count != 0)            {                var a = MessageBox.Show($"File {currentFileName.Split('\\')[currentFileName.Split('\\').Length - 1]} is not saved", "File is not saved", MessageBoxButtons.OKCancel, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1);                if (!String.IsNullOrEmpty(currentFileName) && a == DialogResult.OK)
                    this.Save();
                else                if (String.IsNullOrEmpty(currentFileName) && a == DialogResult.OK && SaveFileDialog.ShowDialog() == DialogResult.OK)
                    this.SaveToFile(SaveFileDialog);

            }            if (OpenFileDialog.ShowDialog() == DialogResult.OK)            {                this.OpenFromFile();            }        }        private void SaveFileClick(object sender, EventArgs e)        {            if (!isSaved && !String.IsNullOrEmpty(currentFileName) && books.Count != 0)            {                this.Save();            }        }        private void SaveAsClick(object sender, EventArgs e)        {            if (books.Count != 0)            {                if (SaveFileDialog.ShowDialog() == DialogResult.OK)                {                    this.SaveToFile(SaveFileDialog);                }            }        }        private void DeleteClick(object sender, EventArgs e)        {            if (BookGrid.SelectedRows.Count != 0)            {                foreach (DataGridViewRow one in BookGrid.SelectedRows)                {                    books.RemoveAt(one.Index);                }                this.LoadInDataGrid();            }        }    }}